# üê≥ Docker Compose for Test Automation Harness
# Provides complete development and testing environment

# Removed version to avoid Docker Compose warnings

services:
  # Main application service
  test-harness:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: test-automation-harness
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - LOG_LEVEL=debug
    volumes:
      # Mount configuration for easy development
      - ./config:/app/config:ro
      # Mount artifacts directory for persistent test results
      - ./artifacts:/app/artifacts
      # Mount source for development (comment out for production)
      - ./src:/app/src:ro
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    depends_on:
      - redis
    
  # Redis for caching and session management (optional but recommended)
  redis:
    image: redis:7-alpine
    container_name: test-harness-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - test-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Development service with hot reload
  test-harness-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    container_name: test-automation-harness-dev
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
      - LOG_LEVEL=debug
    volumes:
      - ./src:/app/src
      - ./config:/app/config
      - ./artifacts:/app/artifacts
      - /app/node_modules
    networks:
      - test-network
    command: npm run dev
    profiles:
      - dev

# Named volumes for persistent data
volumes:
  redis_data:
    driver: local

# Network for service communication
networks:
  test-network:
    driver: bridge
